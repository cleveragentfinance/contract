/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CALottery, CALotteryInterface } from "../../contracts/CALottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_busdTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_randomGeneratorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_freeTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AdminTokenRecovery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "firstTicketIdNextLottery",
        type: "uint256",
      },
    ],
    name: "LotteryClose",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "injectedAmount",
        type: "uint256",
      },
    ],
    name: "LotteryInjection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "countWinningTickets",
        type: "uint256",
      },
    ],
    name: "LotteryNumberDrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceTicketInBusd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "firstTicketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "injectedAmount",
        type: "uint256",
      },
    ],
    name: "LotteryOpen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "injector",
        type: "address",
      },
    ],
    name: "NewOperatorAndTreasuryAndInjectorAddresses",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "randomGenerator",
        type: "address",
      },
    ],
    name: "NewRandomGenerator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numberTickets",
        type: "uint256",
      },
    ],
    name: "TicketsClaim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numberTickets",
        type: "uint256",
      },
    ],
    name: "TicketsPurchase",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_LENGTH_LOTTERY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_TREASURY_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_DISCOUNT_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_LENGTH_LOTTERY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "busdToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        internalType: "uint32[]",
        name: "_ticketNumbers",
        type: "uint32[]",
      },
    ],
    name: "buyTickets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_discountDivisor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceTicket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numberTickets",
        type: "uint256",
      },
    ],
    name: "calculateTotalPriceForBulkTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomGeneratorAddress",
        type: "address",
      },
    ],
    name: "changeRandomGenerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_ticketIds",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "_brackets",
        type: "uint32[]",
      },
    ],
    name: "claimTickets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "closeLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTicketId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_autoInjection",
        type: "bool",
      },
    ],
    name: "drawFinalNumberAndMakeLotteryClaimable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "injectFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "injectorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxNumberTicketsPerBuyOrClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPriceTicketInBusd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPriceTicketInBusd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operatorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAmountToWinners",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInjectionNextLottery",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomGenerator",
    outputs: [
      {
        internalType: "contract IRandomNumberGenerator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverWrongTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxNumberTicketsPerBuy",
        type: "uint256",
      },
    ],
    name: "setMaxNumberTicketsPerBuy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minPriceTicketInBusd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxPriceTicketInBusd",
        type: "uint256",
      },
    ],
    name: "setMinAndMaxTicketPriceInBusd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operatorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_injectorAddress",
        type: "address",
      },
    ],
    name: "setOperatorAndTreasuryAndInjectorAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_priceTicketInBusd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_discountDivisor",
        type: "uint256",
      },
      {
        internalType: "uint256[6]",
        name: "_rewardsBreakdown",
        type: "uint256[6]",
      },
      {
        internalType: "uint256",
        name: "_treasuryFee",
        type: "uint256",
      },
    ],
    name: "startLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewCurrentLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "viewLottery",
    outputs: [
      {
        components: [
          {
            internalType: "enum CALottery.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceTicketInBusd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "discountDivisor",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "rewardsBreakdown",
            type: "uint256[6]",
          },
          {
            internalType: "uint256",
            name: "treasuryFee",
            type: "uint256",
          },
          {
            internalType: "uint256[6]",
            name: "busdPerBracket",
            type: "uint256[6]",
          },
          {
            internalType: "uint256[6]",
            name: "countWinnersPerBracket",
            type: "uint256[6]",
          },
          {
            internalType: "uint256",
            name: "firstTicketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "firstTicketIdNextLottery",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountCollectedInBusd",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "finalNumber",
            type: "uint32",
          },
        ],
        internalType: "struct CALottery.Lottery",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ticketIds",
        type: "uint256[]",
      },
    ],
    name: "viewNumbersAndStatusesForTicketIds",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ticketId",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_bracket",
        type: "uint32",
      },
    ],
    name: "viewRewardsForTicketId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cursor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
    ],
    name: "viewUserInfoForLotteryId",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260646007556802b5e3af16b18800006008556611c37937e080006009553480156200002e57600080fd5b5060405162003d2338038062003d23833981016040819052620000519162000226565b60016000556200006133620001b7565b600c80546001600160a01b039485166001600160a01b031991821617909155600e805493851693821693909317909255600d805491909316911617905560116020527f4ad3b33220dddc71b994a52d72c06b10862965f7d926534c05c00fb7e819e7b7805463ffffffff199081166001179091557f17bc176d2408558f6e4111feebc3cab4e16b63e967be91cde721f4c8a488b55280548216600b1790557f08037d7b151cc412d25674a4e66b334d9ae9d2e5517a7feaae5cdb828bf1c62880548216606f1790557f9bfbaa59f8e10e7868f8b402de9d605a390c45ddaebd8c9de3c6f31e733c87ff805482166104571790557f251164fe1d8864fe5e86082eae9c288bc2b58695a4d28538dfe86e9e4f17558580548216612b6717905560056000527fc550213cee30afd5e67ccba7be3d381bbc169034ae08eb3ec9168caca9fe55e780549091166201b20717905562000270565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200022157600080fd5b919050565b6000806000606084860312156200023c57600080fd5b620002478462000209565b9250620002576020850162000209565b9150620002676040850162000209565b90509250925092565b613aa380620002806000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063c914914f116100b8578063dcbad90d1161007c578063dcbad90d1461046d578063de0e701414610480578063e8ae2edf14610493578063f2b3c809146104a6578063f2fde38b146104af57600080fd5b8063c914914f1461042b578063c9fd314e1461043e578063d9f9061a14610447578063da4ca03914610450578063db19da0d1461046357600080fd5b80639d8ca531116100ff5780639d8ca531146103cc578063b1829b82146103df578063c38de539146103f2578063c4937ab914610405578063c5f956af1461041857600080fd5b80638da5cb5b146103745780638fc3539a1461038557806398359fa1146103a65780639c384653146103b957600080fd5b8063471aeab4116101b3578063715018a611610182578063715018a6146103355780637cb583bd1461033d57806380a061601461034657806381c2d4b61461034e57806388303dbd1461036157600080fd5b8063471aeab4146102fd578063686465b8146103105780636b873788146103195780636be4097c1461032c57600080fd5b80631fe86c6b116101fa5780631fe86c6b146102a35780632423807a146102ac5780632e530cae146102cc5780633d78a079146102df5780633f138d4b146102e857600080fd5b806305531eeb1461022c57806307fb5a9c14610258578063127effb21461026f57806312a9769d1461029a575b600080fd5b61023f61023a3660046130df565b6104c2565b60405161024f949392919061318b565b60405180910390f35b61026161371481565b60405190815260200161024f565b600354610282906001600160a01b031681565b6040516001600160a01b03909116815260200161024f565b610261600a5481565b61026160075481565b6102bf6102ba3660046131ff565b6107ad565b60405161024f9190613273565b6102616102da366004613348565b61090e565b61026160085481565b6102fb6102f6366004613381565b610995565b005b6102fb61030b3660046133ab565b610a51565b61026160065481565b6102fb6103273660046131ff565b610b94565b61026160055481565b6102fb610bdf565b61026161012c81565b600554610261565b600d54610282906001600160a01b031681565b6102fb61036f366004613412565b610bf3565b6001546001600160a01b0316610282565b61039861039336600461345e565b611312565b60405161024f9291906134a0565b6102fb6103b43660046134ce565b6114cb565b600254610282906001600160a01b031681565b6102fb6103da3660046131ff565b611688565b6102fb6103ed3660046134e9565b61188f565b6102fb610400366004613546565b611d79565b610261610413366004613576565b612344565b600454610282906001600160a01b031681565b6102fb6104393660046135a2565b6123f3565b610261600b5481565b61026160095481565b6102fb61045e36600461361c565b61297e565b6102616205472c81565b600e54610282906001600160a01b031681565b600c54610282906001600160a01b031681565b6102fb6104a13660046133ab565b612a7c565b610261610bb881565b6102fb6104bd3660046134ce565b612adf565b6001600160a01b0384166000908152601360209081526040808320868452909152812054606091829182919085906104fa8882613675565b82111561050e5761050b8882613675565b91505b60008267ffffffffffffffff8111156105295761052961368c565b604051908082528060200260200182016040528015610552578160200160208202803683370190505b50905060008367ffffffffffffffff8111156105705761057061368c565b604051908082528060200260200182016040528015610599578160200160208202803683370190505b50905060008467ffffffffffffffff8111156105b7576105b761368c565b6040519080825280602002602001820160405280156105e0578160200160208202803683370190505b50905060005b8581101561078757601360008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e81526020019081526020016000208c8261063091906136a2565b81548110610640576106406136ba565b906000526020600020015484828151811061065d5761065d6136ba565b6020026020010181815250506010600085838151811061067f5761067f6136ba565b6020026020010151815260200190815260200160002060000160009054906101000a900463ffffffff168382815181106106bb576106bb6136ba565b602002602001019063ffffffff16908163ffffffff168152505060006001600160a01b0316601060008684815181106106f6576106f66136ba565b60209081029190910181015182528101919091526040016000205464010000000090046001600160a01b03160361075057600182828151811061073b5761073b6136ba565b91151560209283029190910190910152610775565b6000828281518110610764576107646136ba565b911515602092830291909101909101525b8061077f816136d0565b9150506105e6565b50828282610795888f6136a2565b98509850985098505050505050945094509450949050565b6107b5612fd1565b6000828152600f60205260409081902081516101a081019092528054829060ff1660038111156107e7576107e7613218565b60038111156107f8576107f8613218565b81526001820154602082015260028201546040808301919091526003830154606083015260048301546080830152805160c081019182905260a09092019190600584019060069082845b815481526020019060010190808311610842575050509183525050600b82015460208201526040805160c081018252910190600c830160068282826020028201915b8154815260200190600101908083116108845750505091835250506040805160c081019182905260209092019190601284019060069082845b8154815260200190600101908083116108bd5750505091835250506018820154602082015260198201546040820152601a8201546060820152601b9091015463ffffffff1660809091015292915050565b600060036000858152600f602052604090205460ff16600381111561093557610935613218565b146109425750600061098e565b6000848152600f60205260409020601901548311801561097357506000848152600f60205260409020601801548311155b156109805750600061098e565b61098b848484612b58565b90505b9392505050565b61099d612c62565b600c546001600160a01b03908116908316036109f75760405162461bcd60e51b815260206004820152601460248201527321b0b73737ba10313290313ab9b2103a37b5b2b760611b60448201526064015b60405180910390fd5b610a0b6001600160a01b0383163383612cbc565b604080516001600160a01b0384168152602081018390527f74545154aac348a3eac92596bd1971957ca94795f4e954ec5f613b55fab78129910160405180910390a15050565b6001546001600160a01b0316331480610a7457506002546001600160a01b031633145b610ab85760405162461bcd60e51b81526020600482015260156024820152742737ba1037bbb732b91037b91034b73532b1ba37b960591b60448201526064016109ee565b60016000838152600f602052604090205460ff166003811115610add57610add613218565b14610b1d5760405162461bcd60e51b815260206004820152601060248201526f2637ba3a32b93c903737ba1037b832b760811b60448201526064016109ee565b600c54610b35906001600160a01b0316333084612d24565b6000828152600f60205260408120601a018054839290610b569084906136a2565b909155505060405181815282907f1bbd659dd628a25f7ff2eabb69c74a56939c539728282275c1c9c1a2d3e340499060200160405180910390a25050565b610b9c612c62565b80600003610bda5760405162461bcd60e51b815260206004820152600b60248201526a04d757374206265203e20360ac1b60448201526064016109ee565b600755565b610be7612c62565b610bf16000612d62565b565b333b15610c395760405162461bcd60e51b815260206004820152601460248201527310dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b60448201526064016109ee565b333214610c885760405162461bcd60e51b815260206004820152601a60248201527f50726f787920636f6e7472616374206e6f7420616c6c6f77656400000000000060448201526064016109ee565b600260005403610caa5760405162461bcd60e51b81526004016109ee906136e9565b60026000908155819003610cf65760405162461bcd60e51b8152602060048201526013602482015272139bc81d1a58dad95d081cdc1958da599a5959606a1b60448201526064016109ee565b600754811115610d3b5760405162461bcd60e51b815260206004820152601060248201526f546f6f206d616e79207469636b65747360801b60448201526064016109ee565b60016000848152600f602052604090205460ff166003811115610d6057610d60613218565b14610da35760405162461bcd60e51b81526020600482015260136024820152722637ba3a32b93c9034b9903737ba1037b832b760691b60448201526064016109ee565b6000838152600f60205260409020600201544210610df55760405162461bcd60e51b815260206004820152600f60248201526e2637ba3a32b93c9034b99037bb32b960891b60448201526064016109ee565b600d546040516370a0823160e01b8152336004820152600091670de0b6b3a7640000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610e4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6e9190613720565b610e78919061374f565b90506000818311610e8a576000610e94565b610e948284613675565b9050610ea08184613675565b6000868152600f6020526040812060048101546003909101549294509091610ec9919084612db4565b600d549091506001600160a01b03166323b872dd3330610ef187670de0b6b3a7640000613763565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610f45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f699190613782565b508015610f8857600c54610f88906001600160a01b0316333084612d24565b6000868152600f60205260408120601a018054839290610fa99084906136a2565b90915550600090505b848110156112cc576000868683818110610fce57610fce6136ba565b9050602002016020810190610fe3919061379f565b9050620f42408163ffffffff16101580156110075750621e847f8163ffffffff1611155b6110435760405162461bcd60e51b815260206004820152600d60248201526c4f7574736964652072616e676560981b60448201526064016109ee565b60008881526012602052604081209061105d600a846137bc565b6110689060016137df565b63ffffffff1681526020810191909152604001600090812080549161108c836136d0565b90915550506000888152601260205260408120906110ab6064846137bc565b6110b690600b6137df565b63ffffffff168152602081019190915260400160009081208054916110da836136d0565b90915550506000888152601260205260408120906110fa6103e8846137bc565b61110590606f6137df565b63ffffffff16815260208101919091526040016000908120805491611129836136d0565b9091555050600088815260126020526040812090611149612710846137bc565b611155906104576137df565b63ffffffff16815260208101919091526040016000908120805491611179836136d0565b909155505060008881526012602052604081209061119a620186a0846137bc565b6111a690612b676137df565b63ffffffff168152602081019190915260400160009081208054916111ca836136d0565b90915550506000888152601260205260408120906111eb620f4240846137bc565b6111f8906201b2076137df565b63ffffffff1681526020810191909152604001600090812080549161121c836136d0565b90915550503360008181526013602090815260408083208c84528252808320600680548254600181018455928652848620909201919091558151808301835263ffffffff80881682528185019687528254865260109094529184209151825495516001600160a01b0316640100000000026001600160c01b031990961693169290921793909317909255815491906112b3836136d0565b91905055505080806112c4906136d0565b915050610fb2565b50604051848152869033907fd7d247b583de1023852eef87b48f54354dbec771d01bc2cc49e96094efc322b9906020015b60405180910390a35050600160005550505050565b6060808260008167ffffffffffffffff8111156113315761133161368c565b60405190808252806020026020018201604052801561135a578160200160208202803683370190505b50905060008267ffffffffffffffff8111156113785761137861368c565b6040519080825280602002602001820160405280156113a1578160200160208202803683370190505b50905060005b838110156114bc57601060008989848181106113c5576113c56136ba565b90506020020135815260200190815260200160002060000160009054906101000a900463ffffffff16838281518110611400576114006136ba565b63ffffffff9092166020928302919091019091015260006010818a8a8581811061142c5761142c6136ba565b602090810292909201358352508101919091526040016000205464010000000090046001600160a01b031603611485576001828281518110611470576114706136ba565b911515602092830291909101909101526114aa565b6000828281518110611499576114996136ba565b911515602092830291909101909101525b806114b4816136d0565b9150506113a7565b509093509150505b9250929050565b6114d3612c62565b60036005546000908152600f602052604090205460ff1660038111156114fb576114fb613218565b146115485760405162461bcd60e51b815260206004820152601860248201527f4c6f7474657279206e6f7420696e20636c61696d61626c65000000000000000060448201526064016109ee565b806001600160a01b031663b37217a4600554600654604051602001611577929190918252602082015260400190565b60408051808303601f1901815290829052805160209091012060e083901b6001600160e01b03191682526004820152602401600060405180830381600087803b1580156115c357600080fd5b505af11580156115d7573d6000803e3d6000fd5b50505050806001600160a01b031663a1c4f55a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163d9190613807565b50600e80546001600160a01b0319166001600160a01b0383169081179091556040517f383f8cb39dfa7c3fb901a460dd449ea924868f0a92ff03da64740fffa5f1de6290600090a250565b6003546001600160a01b031633146116b25760405162461bcd60e51b81526004016109ee90613824565b6002600054036116d45760405162461bcd60e51b81526004016109ee906136e9565b600260005560016000828152600f602052604090205460ff1660038111156116fe576116fe613218565b1461173e5760405162461bcd60e51b815260206004820152601060248201526f2637ba3a32b93c903737ba1037b832b760811b60448201526064016109ee565b6000818152600f602052604090206002015442116117915760405162461bcd60e51b815260206004820152601060248201526f2637ba3a32b93c903737ba1037bb32b960811b60448201526064016109ee565b6006546000828152600f6020908152604091829020601901839055600e548251918201859052918101929092526001600160a01b03169063b37217a49060600160408051808303601f1901815290829052805160209091012060e083901b6001600160e01b03191682526004820152602401600060405180830381600087803b15801561181d57600080fd5b505af1158015611831573d6000803e3d6000fd5b5050506000828152600f6020908152604091829020805460ff1916600217905560065491519182528392507f3728e75294796694d59d2ffced9c394279baf7b9ebd2702db43f5f04bac67929910160405180910390a2506001600055565b6003546001600160a01b031633146118b95760405162461bcd60e51b81526004016109ee90613824565b60055415806118ed575060036005546000908152600f602052604090205460ff1660038111156118eb576118eb613218565b145b6119395760405162461bcd60e51b815260206004820152601960248201527f4e6f742074696d6520746f207374617274206c6f74746572790000000000000060448201526064016109ee565b6137146119464287613675565b11801561195e57506205472c61195c4287613675565b105b6119aa5760405162461bcd60e51b815260206004820152601f60248201527f4c6f7474657279206c656e677468206f757473696465206f662072616e67650060448201526064016109ee565b60095484101580156119be57506008548411155b6119fe5760405162461bcd60e51b81526020600482015260116024820152704f757473696465206f66206c696d69747360781b60448201526064016109ee565b61012c831015611a505760405162461bcd60e51b815260206004820152601860248201527f446973636f756e742064697669736f7220746f6f206c6f77000000000000000060448201526064016109ee565b610bb8811115611a9a5760405162461bcd60e51b81526020600482015260156024820152740a8e4cac2e6eae4f240cccaca40e8dede40d0d2ced605b1b60448201526064016109ee565b60a0820135608083013560608401356040850135611abd602087013587356136a2565b611ac791906136a2565b611ad191906136a2565b611adb91906136a2565b611ae591906136a2565b61271014611b355760405162461bcd60e51b815260206004820152601860248201527f52657761726473206d75737420657175616c203130303030000000000000000060448201526064016109ee565b60058054906000611b45836136d0565b9091555050604080516101a0810190915280600181526020014281526020018681526020018581526020018481526020018360068060200260405190810160405280929190826006602002808284376000920182905250928452505060208083018590526040805160c080820183528482528184018590528183018590526060808301869052608080840187905260a080850188905285890194909452845180840186528781528087018890528086018890528083018890528082018890528085018890529188019190915260065490870181905291860191909152600a549085015260e09093018290526005548252600f90522081518154829060ff19166001836003811115611c5857611c58613218565b02179055506020820151600182015560408201516002820155606082015160038201556080820151600482015560a0820151611c9a9060058301906006613052565b5060c0820151600b82015560e0820151611cba90600c8301906006613052565b50610100820151611cd19060128301906006613052565b5061012082015160188201556101408201516019820155610160820151601a82015561018090910151601b909101805463ffffffff191663ffffffff909216919091179055600554600654600a5460408051428152602081018a9052908101889052606081019290925260808201527f367e70f8c0e0c0a6504d92172bda155c02022d532fc85b5d66a9c49e31c8bc779060a00160405180910390a250506000600a55505050565b6003546001600160a01b03163314611da35760405162461bcd60e51b81526004016109ee90613824565b600260005403611dc55760405162461bcd60e51b81526004016109ee906136e9565b60026000818155838152600f602052604090205460ff166003811115611ded57611ded613218565b14611e2e5760405162461bcd60e51b81526020600482015260116024820152704c6f7474657279206e6f7420636c6f736560781b60448201526064016109ee565b600e60009054906101000a90046001600160a01b03166001600160a01b031663fbe5d9176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea59190613720565b8214611ee75760405162461bcd60e51b8152602060048201526011602482015270273ab6b132b939903737ba10323930bbb760791b60448201526064016109ee565b600e54604080516350e27aad60e11b815290516000926001600160a01b03169163a1c4f55a9160048083019260209291908290030181865afa158015611f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f559190613807565b6000848152600f60205260408120600b015491925090819061271090611f7b9082613675565b6000878152600f60205260409020601a0154611f979190613763565b611fa1919061374f565b90506000805b60068163ffffffff16101561221b576000611fc382600561384a565b90506000611fd28260016137df565b611fdd90600a613982565b611fe790886137bc565b63ffffffff8084166000908152601160205260409020546120099291166137df565b60008a815260126020908152604080832063ffffffff85168452909152902054909150612037908790613675565b60008a8152600f6020526040902060120163ffffffff84166006811061205f5761205f6136ba565b0155600089815260126020908152604080832063ffffffff8516845290915290205461208c908790613675565b1561218b576000898152600f6020526040902060050163ffffffff8316600681106120b9576120b96136ba565b01541561218657600089815260126020908152604080832063ffffffff85168452909152902054612710906120ef908890613675565b60008b8152600f60205260409020879060050163ffffffff861660068110612119576121196136ba565b01546121259190613763565b61212f919061374f565b612139919061374f565b60008a8152600f60205260409020600c0163ffffffff841660068110612161576121616136ba565b0155600089815260126020908152604080832063ffffffff8516845290915290205495505b612206565b6000898152600f60205260408120600c0163ffffffff8416600681106121b3576121b36136ba565b01556000898152600f6020526040902061271090869060050163ffffffff8516600681106121e3576121e36136ba565b01546121ef9190613763565b6121f9919061374f565b61220390856136a2565b93505b505080806122139061399f565b915050611fa7565b506000868152600f60205260409020601b8101805463ffffffff871663ffffffff19909116179055805460ff191660031790556122588183613675565b600b600082825461226991906136a2565b9091555050600b54600c546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156122b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122dd9190613720565b6122e79190613675565b905084156122f557600a8190555b6005546040805163ffffffff87168152602081018690527f98e31a6607b8b15b4d5b91de54f4c09ffe4c4cf162aa532c70b5213754e2e703910160405180910390a25050600160005550505050565b600061012c8410156123985760405162461bcd60e51b815260206004820152601f60248201527f4d757374206265203e3d204d494e5f444953434f554e545f44495649534f520060448201526064016109ee565b816000036123e85760405162461bcd60e51b815260206004820152601d60248201527f4e756d626572206f66207469636b657473206d757374206265203e203000000060448201526064016109ee565b61098b848484612db4565b333b156124395760405162461bcd60e51b815260206004820152601460248201527310dbdb9d1c9858dd081b9bdd08185b1b1bddd95960621b60448201526064016109ee565b3332146124885760405162461bcd60e51b815260206004820152601a60248201527f50726f787920636f6e7472616374206e6f7420616c6c6f77656400000000000060448201526064016109ee565b6002600054036124aa5760405162461bcd60e51b81526004016109ee906136e9565b60026000558281146124f05760405162461bcd60e51b815260206004820152600f60248201526e09cdee840e6c2daca40d8cadccee8d608b1b60448201526064016109ee565b60008390036125355760405162461bcd60e51b815260206004820152601160248201527004c656e677468206d757374206265203e3607c1b60448201526064016109ee565b60075483111561257a5760405162461bcd60e51b815260206004820152601060248201526f546f6f206d616e79207469636b65747360801b60448201526064016109ee565b60036000868152600f602052604090205460ff16600381111561259f5761259f613218565b146125e45760405162461bcd60e51b81526020600482015260156024820152744c6f7474657279206e6f7420636c61696d61626c6560581b60448201526064016109ee565b6000805b84811015612900576006848483818110612604576126046136ba565b9050602002016020810190612619919061379f565b63ffffffff16106126635760405162461bcd60e51b8152602060048201526014602482015273427261636b6574206f7574206f662072616e676560601b60448201526064016109ee565b6000868683818110612677576126776136ba565b90506020020135905080600f60008a815260200190815260200160002060190154116126d95760405162461bcd60e51b81526020600482015260116024820152700a8d2c6d6cae892c840e8dede40d0d2ced607b1b60448201526064016109ee565b6000888152600f602052604090206018015481101561272d5760405162461bcd60e51b815260206004820152601060248201526f5469636b6574496420746f6f206c6f7760801b60448201526064016109ee565b60008181526010602052604090205464010000000090046001600160a01b0316331461278b5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b60448201526064016109ee565b60008181526010602052604081208054640100000000600160c01b03191690556127dc89838888878181106127c2576127c26136ba565b90506020020160208101906127d7919061379f565b612b58565b90508060000361282e5760405162461bcd60e51b815260206004820152601960248201527f4e6f207072697a6520666f72207468697320627261636b65740000000000000060448201526064016109ee565b858584818110612840576128406136ba565b9050602002016020810190612855919061379f565b63ffffffff166005146128df576128998983888887818110612879576128796136ba565b905060200201602081019061288e919061379f565b6127d79060016137df565b156128df5760405162461bcd60e51b8152602060048201526016602482015275213930b1b5b2ba1036bab9ba103132903434b3b432b960511b60448201526064016109ee565b6128e981856136a2565b9350505080806128f8906136d0565b9150506125e8565b50600c54612918906001600160a01b03163383612cbc565b80600b541061293e5780600b60008282546129339190613675565b909155506129449050565b6000600b555b6040805182815260208101869052879133917f0f5fca62da8fb5d95525b49e5eaa7b20bc6bd9e2f6b64b493442d1c0bd6ef48691016112fd565b612986612c62565b6001600160a01b0383166129ac5760405162461bcd60e51b81526004016109ee906139c2565b6001600160a01b0382166129d25760405162461bcd60e51b81526004016109ee906139c2565b6001600160a01b0381166129f85760405162461bcd60e51b81526004016109ee906139c2565b600380546001600160a01b038581166001600160a01b0319928316811790935560048054868316908416811790915560028054928616929093168217909255604080519384526020840192909252908201527f3e945b7660001d46cfd5e729545f7f0b6c65bdee54066a91c7acad703f1b731e9060600160405180910390a1505050565b612a84612c62565b80821115612ad45760405162461bcd60e51b815260206004820152601b60248201527f6d696e5072696365206d757374206265203c206d61785072696365000000000060448201526064016109ee565b600991909155600855565b612ae7612c62565b6001600160a01b038116612b4c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109ee565b612b5581612d62565b50565b6000838152600f60209081526040808320601b0154858452601090925282205463ffffffff918216911682612b8e8560016137df565b612b9990600a613982565b612ba390836137bc565b63ffffffff808716600090815260116020526040902054612bc59291166137df565b90506000612bd48660016137df565b612bdf90600a613982565b612be990856137bc565b63ffffffff808816600090815260116020526040902054612c0b9291166137df565b90508063ffffffff168263ffffffff1603612c55576000888152600f60205260409020600c0163ffffffff871660068110612c4857612c486136ba565b015494505050505061098e565b600094505050505061098e565b6001546001600160a01b03163314610bf15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109ee565b6040516001600160a01b038316602482015260448101829052612d1f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612deb565b505050565b6040516001600160a01b0380851660248301528316604482015260648101829052612d5c9085906323b872dd60e01b90608401612ce8565b50505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008382612dc38260016136a2565b612dcd9190613675565b612dd78486613763565b612de19190613763565b61098b919061374f565b6000612e40826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ebd9092919063ffffffff16565b805190915015612d1f5780806020019051810190612e5e9190613782565b612d1f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109ee565b606061098b8484600085856001600160a01b0385163b612f1f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109ee565b600080866001600160a01b03168587604051612f3b9190613a1e565b60006040518083038185875af1925050503d8060008114612f78576040519150601f19603f3d011682016040523d82523d6000602084013e612f7d565b606091505b5091509150612f8d828286612f98565b979650505050505050565b60608315612fa757508161098e565b825115612fb75782518084602001fd5b8160405162461bcd60e51b81526004016109ee9190613a3a565b604080516101a08101909152806000815260200160008152602001600081526020016000815260200160008152602001613009613090565b81526020016000815260200161301d613090565b815260200161302a613090565b8152602001600081526020016000815260200160008152602001600063ffffffff1681525090565b8260068101928215613080579160200282015b82811115613080578251825591602001919060010190613065565b5061308c9291506130ae565b5090565b6040518060c001604052806006906020820280368337509192915050565b5b8082111561308c57600081556001016130af565b80356001600160a01b03811681146130da57600080fd5b919050565b600080600080608085870312156130f557600080fd5b6130fe856130c3565b966020860135965060408601359560600135945092505050565b600081518084526020808501945080840160005b8381101561314e57815163ffffffff168752958201959082019060010161312c565b509495945050505050565b600081518084526020808501945080840160005b8381101561314e57815115158752958201959082019060010161316d565b6080808252855190820181905260009060209060a0840190828901845b828110156131c4578151845292840192908401906001016131a8565b505050838103828501526131d88188613118565b91505082810360408401526131ed8186613159565b91505082606083015295945050505050565b60006020828403121561321157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6004811061324c57634e487b7160e01b600052602160045260246000fd5b9052565b8060005b6006811015612d5c578151845260209384019390910190600101613254565b60006103808201905061328782845161322e565b6020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516132c160a0840182613250565b5060c0830151610160818185015260e085015191506101806132e581860184613250565b61010086015192506132fb610240860184613250565b6101208601516103008601526101408601516103208601529085015161034085015284015163ffffffff811661036085015290505092915050565b63ffffffff81168114612b5557600080fd5b60008060006060848603121561335d57600080fd5b8335925060208401359150604084013561337681613336565b809150509250925092565b6000806040838503121561339457600080fd5b61339d836130c3565b946020939093013593505050565b600080604083850312156133be57600080fd5b50508035926020909101359150565b60008083601f8401126133df57600080fd5b50813567ffffffffffffffff8111156133f757600080fd5b6020830191508360208260051b85010111156114c457600080fd5b60008060006040848603121561342757600080fd5b83359250602084013567ffffffffffffffff81111561344557600080fd5b613451868287016133cd565b9497909650939450505050565b6000806020838503121561347157600080fd5b823567ffffffffffffffff81111561348857600080fd5b613494858286016133cd565b90969095509350505050565b6040815260006134b36040830185613118565b82810360208401526134c58185613159565b95945050505050565b6000602082840312156134e057600080fd5b61098e826130c3565b6000806000806000610140868803121561350257600080fd5b85359450602086013593506040860135925061012086018781111561352657600080fd5b94979396509194606001933592915050565b8015158114612b5557600080fd5b6000806040838503121561355957600080fd5b82359150602083013561356b81613538565b809150509250929050565b60008060006060848603121561358b57600080fd5b505081359360208301359350604090920135919050565b6000806000806000606086880312156135ba57600080fd5b85359450602086013567ffffffffffffffff808211156135d957600080fd5b6135e589838a016133cd565b909650945060408801359150808211156135fe57600080fd5b5061360b888289016133cd565b969995985093965092949392505050565b60008060006060848603121561363157600080fd5b61363a846130c3565b9250613648602085016130c3565b9150613656604085016130c3565b90509250925092565b634e487b7160e01b600052601160045260246000fd5b6000828210156136875761368761365f565b500390565b634e487b7160e01b600052604160045260246000fd5b600082198211156136b5576136b561365f565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600182016136e2576136e261365f565b5060010190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60006020828403121561373257600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261375e5761375e613739565b500490565b600081600019048311821515161561377d5761377d61365f565b500290565b60006020828403121561379457600080fd5b815161098e81613538565b6000602082840312156137b157600080fd5b813561098e81613336565b600063ffffffff808416806137d3576137d3613739565b92169190910692915050565b600063ffffffff8083168185168083038211156137fe576137fe61365f565b01949350505050565b60006020828403121561381957600080fd5b815161098e81613336565b6020808252600c908201526b2737ba1037b832b930ba37b960a11b604082015260600190565b600063ffffffff838116908316818110156138675761386761365f565b039392505050565b600181815b808511156138ac578163ffffffff048211156138925761389261365f565b8085161561389f57918102915b93841c9390800290613874565b509250929050565b6000826138c35750600161397c565b816138d05750600061397c565b81600181146138e657600281146138f057613921565b600191505061397c565b60ff8411156139015761390161365f565b6001841b915063ffffffff82111561391b5761391b61365f565b5061397c565b5060208310610133831016604e8410600b8410161715613958575081810a63ffffffff8111156139535761395361365f565b61397c565b613962838361386f565b8063ffffffff048211156139785761397861365f565b0290505b92915050565b600063ffffffff6139978185168285166138b4565b949350505050565b600063ffffffff8083168181036139b8576139b861365f565b6001019392505050565b60208082526016908201527543616e6e6f74206265207a65726f206164647265737360501b604082015260600190565b60005b83811015613a0d5781810151838201526020016139f5565b83811115612d5c5750506000910152565b60008251613a308184602087016139f2565b9190910192915050565b6020815260008251806020840152613a598160408501602087016139f2565b601f01601f1916919091016040019291505056fea264697066735822122027b87ccd8a652a4173b6da99e3057df0eb5144741718ce8ae4d1d2c98ed380bf64736f6c634300080f0033";

type CALotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CALotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CALottery__factory extends ContractFactory {
  constructor(...args: CALotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _busdTokenAddress: PromiseOrValue<string>,
    _randomGeneratorAddress: PromiseOrValue<string>,
    _freeTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CALottery> {
    return super.deploy(
      _busdTokenAddress,
      _randomGeneratorAddress,
      _freeTokenAddress,
      overrides || {}
    ) as Promise<CALottery>;
  }
  override getDeployTransaction(
    _busdTokenAddress: PromiseOrValue<string>,
    _randomGeneratorAddress: PromiseOrValue<string>,
    _freeTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _busdTokenAddress,
      _randomGeneratorAddress,
      _freeTokenAddress,
      overrides || {}
    );
  }
  override attach(address: string): CALottery {
    return super.attach(address) as CALottery;
  }
  override connect(signer: Signer): CALottery__factory {
    return super.connect(signer) as CALottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CALotteryInterface {
    return new utils.Interface(_abi) as CALotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CALottery {
    return new Contract(address, _abi, signerOrProvider) as CALottery;
  }
}
