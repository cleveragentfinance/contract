/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IStakingV2Controller,
  IStakingV2ControllerInterface,
} from "../../../contracts/InsurAceAgent.sol/IStakingV2Controller";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "proposeUnstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenList",
        type: "address[]",
      },
    ],
    name: "showRewardsFromPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "stakeTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakersPoolV2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokenList",
        type: "address[]",
      },
    ],
    name: "unlockRewardsFromPoolsByController",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "uint8[]",
        name: "v",
        type: "uint8[]",
      },
      {
        internalType: "bytes32[]",
        name: "r",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "s",
        type: "bytes32[]",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IStakingV2Controller__factory {
  static readonly abi = _abi;
  static createInterface(): IStakingV2ControllerInterface {
    return new utils.Interface(_abi) as IStakingV2ControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStakingV2Controller {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IStakingV2Controller;
  }
}
