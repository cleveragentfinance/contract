/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRewardController,
  IRewardControllerInterface,
} from "../../../contracts/InsurAceAgent.sol/IRewardController";

const _abi = [
  {
    inputs: [],
    name: "getRewardInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "r0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenList",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_bBuyCoverUnlockedAmt",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_bClaimUnlockedAmt",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_bReferralUnlockedAmt",
        type: "bool",
      },
    ],
    name: "unlockReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "withdrawReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IRewardController__factory {
  static readonly abi = _abi;
  static createInterface(): IRewardControllerInterface {
    return new utils.Interface(_abi) as IRewardControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRewardController {
    return new Contract(address, _abi, signerOrProvider) as IRewardController;
  }
}
