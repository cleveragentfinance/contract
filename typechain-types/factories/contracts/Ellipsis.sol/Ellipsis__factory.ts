/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Ellipsis,
  EllipsisInterface,
} from "../../../contracts/Ellipsis.sol/Ellipsis";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "amount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "availableDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "availableHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "availableUnlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "availableWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sellRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDepositedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValueLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockHarvest",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTimeLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unlockWithdraw",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600380546001600160a01b03199081167373a7a74627f5a4fcd6d7eef8e023865c4a84cfe81790915560048054821673e9e7cea3dedca5984780bafc599bd69add087d5690811790915560058054831673af41054c1487b0e5e2b9250c0332ecbce6ce9d71179055600680548316735b74c99aa2356b4eaa7b85dc486843edff8dfdbe179055600780548316734d9508257af7442827951f30dbfe3ee2a04adcee1790556008805483167310ed43c718714eb63d5aa57b78b54704e256024e179055600980549092161790553480156100dc57600080fd5b506100e6336100ef565b6001805561013f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6123f28061014e6000396000f3fe6080604052600436106101a35760003560e01c80638da5cb5b116100e0578063d4b8399211610084578063f022028c11610061578063f022028c1461028c578063f2fde38b1461047c578063f440a7bd1461049c578063f7c618c1146104bc57005b8063d4b8399214610427578063e9ba77fb14610447578063ec18154e1461046757005b8063b383140d116100bd578063b383140d1461032a578063bf35b896146103dd578063c89039c5146103f2578063d0e30db01461041257005b80638da5cb5b1461036f57806393ed27951461038d578063aa8c217c146103ad57005b8063371aa158116101475780635149a587116101245780635149a587146102f557806356c7effd146103095780636ed0b7971461032a578063715018a61461035a57005b8063371aa158146102a05780634641257d146102c0578063481c6a75146102d557005b8063158ef93e11610180578063158ef93e1461022c57806317295894146102565780632e1a7d4d1461026c578063358ef7201461028c57005b80630c8106dc146101ac5780630dfe1681146101e9578063137ee36e1461020957005b366101aa57005b005b3480156101b857600080fd5b506007546101cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101f557600080fd5b506009546101cc906001600160a01b031681565b34801561021557600080fd5b5061021e6104dc565b6040519081526020016101e0565b34801561023857600080fd5b50600b546102469060ff1681565b60405190151581526020016101e0565b34801561026257600080fd5b5061021e600a5481565b34801561027857600080fd5b506101aa610287366004611f21565b6105ce565b34801561029857600080fd5b50600061021e565b3480156102ac57600080fd5b506101aa6102bb366004612025565b610b65565b3480156102cc57600080fd5b506101aa610d42565b3480156102e157600080fd5b506002546101cc906001600160a01b031681565b34801561030157600080fd5b506000610246565b34801561031557600080fd5b5061021e610324366004611f21565b50600090565b34801561033657600080fd5b5061021e610345366004611f21565b506fffffffffffffffffffffffffffffffff90565b34801561036657600080fd5b506101aa611470565b34801561037b57600080fd5b506000546001600160a01b03166101cc565b34801561039957600080fd5b506008546101cc906001600160a01b031681565b3480156103b957600080fd5b506103c2611484565b604080519384526020840192909252908201526060016101e0565b3480156103e957600080fd5b506101aa611519565b3480156103fe57600080fd5b506003546101cc906001600160a01b031681565b34801561041e57600080fd5b506101aa611521565b34801561043357600080fd5b506006546101cc906001600160a01b031681565b34801561045357600080fd5b506004546101cc906001600160a01b031681565b34801561047357600080fd5b5061021e611a0d565b34801561048857600080fd5b506101aa6104973660046120e7565b611dbd565b3480156104a857600080fd5b506101aa6104b7366004611f21565b611e36565b3480156104c857600080fd5b506005546101cc906001600160a01b031681565b60408051600180825281830190925260009182919060208083019080368337505060035482519293506001600160a01b03169183915060009061052157610521612104565b6001600160a01b039283166020918202929092010152600654604051631cb6a69360e31b8152600092919091169063e5b5349890610565903090869060040161215e565b600060405180830381865afa158015610582573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105aa919081019061218a565b9050806000815181106105bf576105bf612104565b60200260200101519250505090565b6105d6611e3a565b600654600354604051630f208beb60e01b81526001600160a01b0391821660048201523060248201526000929190911690630f208beb90604401608060405180830381865afa15801561062d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610651919061221b565b505050905060008183116106655782610667565b815b60065460035460405163ead5d35960e01b81526001600160a01b0391821660048201526024810184905260016044820152929350169063ead5d35990606401600060405180830381600087803b1580156106c057600080fd5b505af11580156106d4573d6000803e3d6000fd5b50506003546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190612251565b60035460075460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af115801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c2919061226a565b50600754604051630d2680e960e11b81526004810183905260016024820152600060448201526001600160a01b0390911690631a4d01d290606401600060405180830381600087803b15801561081757600080fd5b505af115801561082b573d6000803e3d6000fd5b50506009546004546001600160a01b039081169116149150610a399050576009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b69190612251565b6040805160028082526060820183529293506000929091602083019080368337505060095482519293506001600160a01b0316918391506000906108fc576108fc612104565b6001600160a01b03928316602091820292909201015260045482519116908290600190811061092d5761092d612104565b6001600160a01b03928316602091820292909201015260095460085460405163095ea7b360e01b815290831660048201526024810185905291169063095ea7b3906044016020604051808303816000875af1158015610990573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b4919061226a565b506008546040516338ed173960e01b81526001600160a01b03909116906338ed1739906109ee90859060009086903090429060040161228c565b6000604051808303816000875af1158015610a0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a35919081019061218a565b5050505b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab9190612251565b9050610acc84610ac685600a54611e9490919063ffffffff16565b90611ea7565b600a6000828254610add91906122de565b90915550506004805460025460405163a9059cbb60e01b81526001600160a01b039182169381019390935260248301849052169063a9059cbb906044016020604051808303816000875af1158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d919061226a565b505050505050565b600b5460ff1615610bb35760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b600280546001600160a01b03191633908117909155610bd190611eb3565b600082905080600081518110610be957610be9612104565b6020026020010151600360006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600181518110610c2a57610c2a612104565b6020026020010151600460006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600281518110610c6b57610c6b612104565b6020026020010151600560006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600381518110610cac57610cac612104565b6020908102919091010151600880546001600160a01b039092166001600160a01b0319928316179055600680548216735b74c99aa2356b4eaa7b85dc486843edff8dfdbe179055600780548216734d9508257af7442827951f30dbfe3ee2a04adcee1790556009805490911673e9e7cea3dedca5984780bafc599bd69add087d561790555050600b805460ff1916600117905550565b610d4a611e3a565b60408051600180825281830190925260009160208083019080368337505060035482519293506001600160a01b031691839150600090610d8c57610d8c612104565b6001600160a01b039283166020918202929092010152600654604051638e2eba0960e01b8152911690638e2eba0990610dcb903090859060040161215e565b600060405180830381600087803b158015610de557600080fd5b505af1158015610df9573d6000803e3d6000fd5b50505050600360009054906101000a90046001600160a01b03166001600160a01b0316633d18b9126040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e4d57600080fd5b505af1158015610e61573d6000803e3d6000fd5b506000925060039150610e719050565b604051908082528060200260200182016040528015610e9a578160200160208202803683370190505b5060055481519192506001600160a01b0316908290600090610ebe57610ebe612104565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b91906122f5565b81600181518110610f4e57610f4e612104565b6001600160a01b039283166020918202929092010152600454825191169082906002908110610f7f57610f7f612104565b6001600160a01b0392831660209182029290920101526005546040516370a0823160e01b815230600482015260009291909116906370a0823190602401602060405180830381865afa158015610fd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffd9190612251565b60055460085460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af1158015611054573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611078919061226a565b506008546040516338ed173960e01b81526001600160a01b03909116906338ed1739906110b290849060009087903090429060040161228c565b6000604051808303816000875af11580156110d1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110f9919081019061218a565b50737c1608c004f20c3520f70b924e2bfef092da00438260008151811061112257611122612104565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa15801561117b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119f91906122f5565b826001815181106111b2576111b2612104565b6001600160a01b0392831660209182029290920101526004548351911690839060029081106111e3576111e3612104565b6001600160a01b0392909216602092830291909101909101526040516370a0823160e01b8152306004820152737c1608c004f20c3520f70b924e2bfef092da0043906370a0823190602401602060405180830381865afa15801561124b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126f9190612251565b60085460405163095ea7b360e01b81526001600160a01b03909116600482015260248101829052909150737c1608c004f20c3520f70b924e2bfef092da00439063095ea7b3906044016020604051808303816000875af11580156112d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fb919061226a565b506008546040516338ed173960e01b81526001600160a01b03909116906338ed17399061133590849060009087903090429060040161228c565b6000604051808303816000875af1158015611354573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261137c919081019061218a565b50600480546002546040516370a0823160e01b815230938101939093526001600160a01b039182169263a9059cbb929091169083906370a0823190602401602060405180830381865afa1580156113d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fb9190612251565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146a919061226a565b50505050565b611478611e3a565b6114826000611eb3565b565b600654600354604051630f208beb60e01b81526001600160a01b0391821660048201523060248201526000928392839283929190911690630f208beb90604401608060405180830381865afa1580156114e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611505919061221b565b5050600a5496600096509194509092505050565b611482611e3a565b611529611e3a565b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b9190612251565b905080600a60008282546115af9190612312565b9091555050604080516002808252606082018352600092602083019080368337019050506009546004549192506001600160a01b0391821691161461174f5760045481516001600160a01b0390911690829060009061161057611610612104565b6001600160a01b03928316602091820292909201015260095482519116908290600190811061164157611641612104565b6001600160a01b0392831660209182029290920101526004805460085460405163095ea7b360e01b815290841692810192909252602482018590529091169063095ea7b3906044016020604051808303816000875af11580156116a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cc919061226a565b506008546040516338ed173960e01b81526001600160a01b03909116906338ed17399061170690859060009086903090429060040161228c565b6000604051808303816000875af1158015611725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261174d919081019061218a565b505b611757611f03565b600081526009546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156117a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c79190612251565b6020820181905260095460075460405163095ea7b360e01b81526001600160a01b0391821660048201526024810193909352169063095ea7b3906044016020604051808303816000875af1158015611823573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611847919061226a565b50600754604051630b4c7e4d60e01b81526001600160a01b0390911690630b4c7e4d9061187b90849060009060040161232a565b600060405180830381600087803b15801561189557600080fd5b505af11580156118a9573d6000803e3d6000fd5b50506003546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156118f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191c9190612251565b60035460065460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af1158015611973573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611997919061226a565b506006546003546040516307dba22560e31b81526001600160a01b0391821660048201526024810184905260016044820152911690633edd112890606401600060405180830381600087803b1580156119ef57600080fd5b505af1158015611a03573d6000803e3d6000fd5b5050505050505050565b600654600354604051630f208beb60e01b81526001600160a01b03918216600482015230602482015260009283921690630f208beb90604401608060405180830381865afa158015611a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a87919061221b565b50506040805160028082526060820183529394506000938493509091602083019080368337019050506009546004549192506060916001600160a01b03908116911614611be05760095482516001600160a01b03909116908390600090611af057611af0612104565b6001600160a01b039283166020918202929092010152600454835191169083906001908110611b2157611b21612104565b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b815291169063d06ca61f90611b609087908690600401612362565b600060405180830381865afa158015611b7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ba5919081019061218a565b90508060018251611bb691906122de565b81518110611bc657611bc6612104565b602002602001015183611bd99190612312565b9250611bed565b611bea8484612312565b92505b6000611bf76104dc565b6040805160038082526080820190925291925060208201606080368337505060055482519295506001600160a01b031691859150600090611c3a57611c3a612104565b6001600160a01b03928316602091820292909201810191909152600854604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa158015611c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb791906122f5565b83600181518110611cca57611cca612104565b6001600160a01b039283166020918202929092010152600454845191169084906002908110611cfb57611cfb612104565b6001600160a01b03928316602091820292909201015260085460405163d06ca61f60e01b815291169063d06ca61f90611d3a9084908790600401612362565b600060405180830381865afa158015611d57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d7f919081019061218a565b91508160018351611d9091906122de565b81518110611da057611da0612104565b602002602001015184611db39190612312565b9695505050505050565b611dc5611e3a565b6001600160a01b038116611e2a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610baa565b611e3381611eb3565b50565b611e335b6000546001600160a01b031633146114825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610baa565b6000611ea0828461237b565b9392505050565b6000611ea0828461239a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405180604001604052806002906020820280368337509192915050565b600060208284031215611f3357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f7957611f79611f3a565b604052919050565b600067ffffffffffffffff821115611f9b57611f9b611f3a565b5060051b60200190565b6001600160a01b0381168114611e3357600080fd5b600082601f830112611fcb57600080fd5b81356020611fe0611fdb83611f81565b611f50565b82815260059290921b84018101918181019086841115611fff57600080fd5b8286015b8481101561201a5780358352918301918301612003565b509695505050505050565b6000806040838503121561203857600080fd5b823567ffffffffffffffff8082111561205057600080fd5b818501915085601f83011261206457600080fd5b81356020612074611fdb83611f81565b82815260059290921b8401810191818101908984111561209357600080fd5b948201945b838610156120ba5785356120ab81611fa5565b82529482019490820190612098565b965050860135925050808211156120d057600080fd5b506120dd85828601611fba565b9150509250929050565b6000602082840312156120f957600080fd5b8135611ea081611fa5565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156121535781516001600160a01b03168752958201959082019060010161212e565b509495945050505050565b6001600160a01b03831681526040602082018190526000906121829083018461211a565b949350505050565b6000602080838503121561219d57600080fd5b825167ffffffffffffffff8111156121b457600080fd5b8301601f810185136121c557600080fd5b80516121d3611fdb82611f81565b81815260059190911b820183019083810190878311156121f257600080fd5b928401925b82841015612210578351825292840192908401906121f7565b979650505050505050565b6000806000806080858703121561223157600080fd5b505082516020840151604085015160609095015191969095509092509050565b60006020828403121561226357600080fd5b5051919050565b60006020828403121561227c57600080fd5b81518015158114611ea057600080fd5b85815284602082015260a0604082015260006122ab60a083018661211a565b6001600160a01b0394909416606083015250608001529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156122f0576122f06122c8565b500390565b60006020828403121561230757600080fd5b8151611ea081611fa5565b60008219821115612325576123256122c8565b500190565b60608101818460005b6002811015612352578151835260209283019290910190600101612333565b5050508260408301529392505050565b828152604060208201526000612182604083018461211a565b6000816000190483118215151615612395576123956122c8565b500290565b6000826123b757634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122042dd6150287ff1247e358279607e35ffceefc6c8abc53bd7795281a6a96f369264736f6c634300080f0033";

type EllipsisConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EllipsisConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ellipsis__factory extends ContractFactory {
  constructor(...args: EllipsisConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Ellipsis> {
    return super.deploy(overrides || {}) as Promise<Ellipsis>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Ellipsis {
    return super.attach(address) as Ellipsis;
  }
  override connect(signer: Signer): Ellipsis__factory {
    return super.connect(signer) as Ellipsis__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EllipsisInterface {
    return new utils.Interface(_abi) as EllipsisInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ellipsis {
    return new Contract(address, _abi, signerOrProvider) as Ellipsis;
  }
}
