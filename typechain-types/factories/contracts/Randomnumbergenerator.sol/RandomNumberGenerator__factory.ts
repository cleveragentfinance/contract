/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RandomNumberGenerator,
  RandomNumberGeneratorInterface,
} from "../../../contracts/Randomnumbergenerator.sol/RandomNumberGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_linkToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "caLottery",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
    ],
    name: "getRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRequestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
    ],
    name: "setKeyHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caLottery",
        type: "address",
      },
    ],
    name: "setLotteryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "viewLatestLotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "viewRandomResult",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610e6b380380610e6b83398101604081905261002f916100cd565b6001600160601b0319606083811b821660a05282901b166080526100586100533390565b61005f565b50506100ff565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146100c857600080fd5b919050565b600080604083850312156100df578182fd5b6100e8836100b1565b91506100f6602084016100b1565b90509250929050565b60805160601c60a05160601c610d33610138600039600081816102bf01526107840152600081816103fa01526107550152610d336000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806394985ddd116100a2578063c4585d3611610071578063c4585d3614610209578063ddca3f431461021c578063eed8e1ee14610225578063f2fde38b1461022e578063fbe5d9171461024157600080fd5b806394985ddd146101c257806398544710146101d5578063a1c4f55a146101e8578063b37217a4146101f657600080fd5b806361728f39116100de57806361728f391461017957806369fe0e2d14610182578063715018a6146101955780638da5cb5b1461019d57600080fd5b806306b091f9146101105780631aa46f59146101255780632a332b2a1461014157806342619f6614610154575b600080fd5b61012361011e366004610b64565b610249565b005b61012e60045481565b6040519081526020015b60405180910390f35b61012361014f366004610b4a565b610269565b6005546101649063ffffffff1681565b60405163ffffffff9091168152602001610138565b61012e60035481565b610123610190366004610bad565b610293565b6101236102a0565b6001546001600160a01b03165b6040516001600160a01b039091168152602001610138565b6101236101d0366004610bc5565b6102b4565b6101236101e3366004610bad565b61033b565b60055463ffffffff16610164565b610123610204366004610bad565b610348565b6002546101aa906001600160a01b031681565b61012e60065481565b61012e60075481565b61012361023c366004610b4a565b6104d8565b60075461012e565b610251610551565b6102656001600160a01b03831633836105ab565b5050565b610271610551565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61029b610551565b600655565b6102a8610551565b6102b26000610602565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103315760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064015b60405180910390fd5b6102658282610654565b610343610551565b600355565b6002546001600160a01b031633146103935760405162461bcd60e51b815260206004820152600e60248201526d4f6e6c792043414c6f747465727960901b6044820152606401610328565b6003546103e25760405162461bcd60e51b815260206004820152601860248201527f4d75737420686176652076616c6964206b6579206861736800000000000000006044820152606401610328565b6006546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561044457600080fd5b505afa158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610be6565b10156104c35760405162461bcd60e51b81526020600482015260166024820152754e6f7420656e6f756768204c494e4b20746f6b656e7360501b6044820152606401610328565b6104d260035460065483610751565b60045550565b6104e0610551565b6001600160a01b0381166105455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610328565b61054e81610602565b50565b6001546001600160a01b031633146102b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610328565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105fd9084906108db565b505050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b81600454146106975760405162461bcd60e51b815260206004820152600f60248201526e15dc9bdb99c81c995c5d595cdd1259608a1b6044820152606401610328565b6106a4620f424082610cdd565b6106b190620f4240610c89565b6005805463ffffffff191663ffffffff9290921691909117905560025460408051630405030b60e51b815290516001600160a01b03909216916380a06160916004808201926020929091908290030181600087803b15801561071257600080fd5b505af1158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190610be6565b6007555050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008587866040516020016107c0929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016107ed93929190610c46565b602060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f9190610b8d565b5060008481526020818152604080832054815180840189905280830187905230606082015260808082018390528351808303909101815260a090910190925281519183019190912087845292909152610899906001610c89565b600086815260208181526040918290209290925580518083018890528082019390935280518084038201815260609093019052815191012090505b9392505050565b6000610930826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109ad9092919063ffffffff16565b8051909150156105fd578080602001905181019061094e9190610b8d565b6105fd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610328565b60606109bc84846000856109c4565b949350505050565b606082471015610a255760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610328565b6001600160a01b0385163b610a7c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610328565b600080866001600160a01b03168587604051610a989190610c2a565b60006040518083038185875af1925050503d8060008114610ad5576040519150601f19603f3d011682016040523d82523d6000602084013e610ada565b606091505b5091509150610aea828286610af5565b979650505050505050565b60608315610b045750816108d4565b825115610b145782518084602001fd5b8160405162461bcd60e51b81526004016103289190610c76565b80356001600160a01b0381168114610b4557600080fd5b919050565b600060208284031215610b5b578081fd5b6108d482610b2e565b60008060408385031215610b76578081fd5b610b7f83610b2e565b946020939093013593505050565b600060208284031215610b9e578081fd5b815180151581146108d4578182fd5b600060208284031215610bbe578081fd5b5035919050565b60008060408385031215610bd7578182fd5b50508035926020909101359150565b600060208284031215610bf7578081fd5b5051919050565b60008151808452610c16816020860160208601610cad565b601f01601f19169290920160200192915050565b60008251610c3c818460208701610cad565b9190910192915050565b60018060a01b0384168152826020820152606060408201526000610c6d6060830184610bfe565b95945050505050565b6020815260006108d46020830184610bfe565b60008219821115610ca857634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015610cc8578181015183820152602001610cb0565b83811115610cd7576000848401525b50505050565b600082610cf857634e487b7160e01b81526012600452602481fd5b50069056fea26469706673582212207782887b6a94c09f4edba19979c19b8d515a331a30c9bba1bd0c8c7c24ba329c64736f6c63430008040033";

type RandomNumberGeneratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomNumberGeneratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomNumberGenerator__factory extends ContractFactory {
  constructor(...args: RandomNumberGeneratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vrfCoordinator: PromiseOrValue<string>,
    _linkToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RandomNumberGenerator> {
    return super.deploy(
      _vrfCoordinator,
      _linkToken,
      overrides || {}
    ) as Promise<RandomNumberGenerator>;
  }
  override getDeployTransaction(
    _vrfCoordinator: PromiseOrValue<string>,
    _linkToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinator,
      _linkToken,
      overrides || {}
    );
  }
  override attach(address: string): RandomNumberGenerator {
    return super.attach(address) as RandomNumberGenerator;
  }
  override connect(signer: Signer): RandomNumberGenerator__factory {
    return super.connect(signer) as RandomNumberGenerator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberGeneratorInterface {
    return new utils.Interface(_abi) as RandomNumberGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberGenerator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberGenerator;
  }
}
